#summary using pygr on Windows

= Pygr on Windows ==

We made two pre-compiled pygr binaries for python2.4 and python2.5. See the main site: [http://bioinformatics.ucla.edu/pygr Pygr Home]

Compiled versions with the Visual Studio 2003 compiler can be found at: [http://code.google.com/p/pygr/source/browse/contrib contributed code]

Users may need to be aware of python shelve compatibility issue and binary compatibility issues between various platforms [http://bioinfo.mbi.ucla.edu/pygr/docs/shelve shelve compatibility]

= How to compile on Windows =

If you have the *Microsoft Visual Studio 2003* compiler available you may skip steps *3,4,5* and *6* below. 

*Step 1.* Install python. Python2.4, Python2.5 or higher is recommended. (Python2.3 failed to compile due to Windows C Runtime Library differences between gcc.exe and Python2.3 windows distribution packages)

*Step 2.*  Install [http://www.cosc.canterbury.ac.nz/greg.ewing/python/Pyrex/ Pyrex]. You don't have to have old windows version. Just download latest version and run python setup.py install as usual.

*Step 3.* Install [http://www.cygwin.com/ cygwin]. If you want to have full (or partial) working linux commans, you need to install cygwin.

*Step 4.* Install [http://www.mingw.org/ MinGW] (gcc compiler for windows).  You need to install latest version of MinGW. For example, install MinGW-5.1.3.exe (this includes all other packages).

*Step 5.* Add Path Environment. Open "System Properties", go to "Advanced" tab and click "Environment Variables". Click "PATH" and press "Edit". Add 
{{{
;C:\Python24;C:\cygwin\bin;C:\MinGW\bin 
}}}
to your path (use Python25 if you installed Python2.5)

*Step 6.* Create and edit the file C:\Python2X\Lib\distutils\distutils.cfg (X = version number)
{{{
[build]
compiler = mingw32
}}}

*Step 7.* Download latest version of pygr from [http://bioinformatics.ucla.edu/pygr Pygr Home]

*Step 8.* You may have to do this manually create .c files from .pyx using pyrex. If your *pyrexc* executable is in your PATH then you may proceed to *Step 9*

*Step 9.* Go to pygr directory and run setup.py

To build the C extensions only run:
{{{
# ONLY FOR C EXTENSION
python setup.py build_ext 
}}}

To build the entire package run:
{{{
# BUILD PYGR, WILL BE SAVED IN BUILD DIRECTORY
python setup.py build 
}}}

To install execute:
{{{
# INSTALL PYGR PACKAGES IN YOUR MACHINE
python setup.py install
}}}

*Step 10.* Use pygr. Now you can import pygr.

{{{
>>> import pygr
}}}