#summary How to set everything up to be able to run megatests.

= Introduction =

The purpose of this page is to provide complete instructions for everyone wishing to run megatests on his/her machine - from obtaining the necessary data to actual running of megatests.

*WARNING: this document is now being rewritten to acommodate recent changes to megatest code. Large parts of it may either still be outdated or conflict with each other.*


= Details =

== Requirements ==

You will need the following to be able to run megatests:

 * A computer system you don't mind placing under heavy load, particularly I/O-wise, on a regular basis. Instructions on this page assume a box running Linux, which so far is the only operating system we have tried running megatests on; Unix(-based) systems should also be supported out of the box, Windows should in principle work but will need either Cygwin or a custom runner script. _Please let us know about the outcome of attempts of running on non-Linux boxes!_

 * A MySQL server (version 5 is recommended), with write access during set-up and read access during running. You'll probably want to use a local, dedicated instance to minimise security implications of the above as well as possible influence of database-access delays on test results;

 * A (relative) lot of disc space. At present megatests take up about 200 GB when idle and up to 600 GB while running;

 * Everything needed by Pygr itself;

 * _(optional)_ A local pygr.Data XML-RPC server, so that the data-download test is not affected by the quality of your connection to the UCLA one;

 * Sequence data, miscellaneous input and reference output used by megatests; obtaining and installing these will be described below.


== Downloading and preparing data ==

Data files need by Pygr megatests can be divided into three categories: sequence data in Pygr's _seqdb.BlastDB_ format, NLMSA files for different tests, and miscellaneous input/output files. The latter two are installed differently from the former one; both procedures will be described here.

Last but not least, since NLMSA-building megatests are run for both file and SQL storage back-ends it is necessary to import data from the last category above into a MySQL database. For your convenience we have provided MySQL dump-files which can be used for this purpose.

Presently there are two distinct classes of megatests, differing in what the primary genome used by each class is and therefore named after the genome in question: _dm2_ (_Drosophila melanogaster_, or common fruit fly) and _hg18_ (_Homo sapiens_, or human). Each class uses its own set of input and output data; it is recommended to keep them in separate directories.


=== BlastDB files ===

The easiest way of obtaining BlastDB sequence-data files is to fetch them using Pygr itself, from the UCLA XML-RPC server - that way downloaded files will automatically become registered into the local Pygr resource database. Information on how to do this can be found on the PygrResourceDownloader page; for your convenience, the lists below provide data-set names in the format understood by Pygr.

The following sequences must be obtained:

 # For _dm2_ megatests
  * Bio.Seq.Genome.ANOGA.anoGam1
  * Bio.Seq.Genome.APIME.apiMel2
  * Bio.Seq.Genome.DROME.dm2
  * Bio.Seq.Genome.DROPS.dp4
  * Bio.Seq.Genome.DROAN.droAna3
  * Bio.Seq.Genome.DROER.droEre2
  * Bio.Seq.Genome.DROGR.droGri2
  * Bio.Seq.Genome.DROMO.droMoj3
  * Bio.Seq.Genome.DROPE.droPer1
  * Bio.Seq.Genome.DROSE.droSec1
  * Bio.Seq.Genome.DROSI.droSim1
  * Bio.Seq.Genome.DROVI.droVir3
  * Bio.Seq.Genome.DROWI.droWil1
  * Bio.Seq.Genome.DROYA.droYak2
  * Bio.Seq.Genome.TRICA.triCas2
 # For _hg18_ "annotation" and "NLMSA" megatests (*FIXME* - verify and reformat!)
  * 'anoCar1', 'bosTau3', 'canFam2', 'cavPor2', 'danRer4', 'dasNov1', 'echTel1', 'equCab1', 'eriEur1', 'felCat3', 'fr2', 'galGal3', 'gasAcu1', 'hg18', 'loxAfr1', 'mm8', 'monDom4', 'ornAna1', 'oryCun1', 'oryLat1', 'otoGar1', 'panTro2', 'rheMac2', 'rn4', 'sorAra1', 'tetNig1', 'tupBel1', 'xenTro2'
 # For _hg18_ "pairwise alignment" megatest (*FIXME* - verify and reformat!)
  * 'canFam2', 'hg18', 'mm8', 'panTro2', 'rn4'

Once the files have been downloaded they require no further attention.


=== NLMSA and other files ===

The necessary files are available (as tar archives) on the Web, at http://biodb.bioinformatics.ucla.edu/MEGATEST/ . Download the archives and unpack them into directories of your choice. You need the following files:

 # NLMSA for _dm2_ megatests
  * maf_data.tar
  * maf_test.tar
 # NLMSA for _hg18_ megatests
  * axt_data.tar
  * maf_data3.tar
  * maf_test3.tar
 # Miscellaneous files
  * input_and_results.tar (note: doesn't create its own directory!)

This time some post-installation steps are necessary before the data can be used: the files _dm2_multiz15way.seqDictP_ (from maf_test.tar) and _hg18_multiz28way.seqDictP_ (from maf_test3.tar) contain hardcoded paths which will need to be changed to reflect your directory structure. Assuming the final path components are to stay the same (i.e. you keep the data in the directories in which they came in the archives), simply open the files in question using an ordinary text editor and replace all the occurrences of _/result/pygr_megatest_ (*FIXME*: double-check this!) with the path of your choice.


=== MySQL data ===

You can find gzip-compressed MySQL dump files (produced with version 5) at http://biodb.bioinformatics.ucla.edu/MEGATEST/. Simply create a new database on your server, download all the _.sql.gz_ files and import them into the said database using e.g. the standard MySQL client (_mysql_).


== Configuration ==

== MySQL access ==

Megatests assume the database they use is located on the default MySQL server and accessed using default user name/password. If your system-wide defaults do not match the desired values of these parameters, you'll need to override them - using a standard MySQL option file. Under Linux/Unix you will most likely use the per-user option file _$HOME/.my.cnf_ file in your home directory

have it contain something like this:
{{{
[client]
port=3306
host=your_database_server
user=your_account
password=your_password
}}}

For more information on the subject of MySQL option files, see http://dev.mysql.com/doc/refman/5.1/en/option-files.html.

XXX


== Choosing the variant ==

As you can see, there are full versions and _chrY(hg18)_ and _chrYh(dm2)_ versions. Current version of pygr megatest uses only short _(chrY for hg18 and chrYh for dm2)_ versions in order to reduce overhead (both CPU and disc-space). If you want to test full version, you need to change *megatest.py* files, i.e. remove all _chrY_/_chrYh_.

On leelab2 (2.8 GHz dual-core Opteron CPU), the short version of megatests runs for about 5 minutes. On the other hand, the full version takes approximately 30 hours.


== The config file ==

The latest incarnation of megatest code and support scripts is quite flexible in terms of where input should come from and output should go to, meaning you could basically distribute the relevant directories all over the system if you wanted to - but also that regardless of where they go, Pygr needs to be told where to look for them. This, along with some other megatest-related things, is done using a Pygr configuration file.


== Scripts ==

Pygr megatest-launching shell script (named e.g. _run_megatests_) looks like this. Because shell script does not have HOME environmental variable, it may not find path for some user-installed packages, i.e., pyrexc. Thus, you may need to do all pyrexc building steps and others manually in shell script. We need to make shell script intact in order to run this megatest by crontab. Some of the lines in daily_megatest may not be operational. PYTHONPATH should be modified according to your system. You can get pygr from git and compile to see where the compiled pygr is located.

All log files are saved in _/result/pygr_megatest/src_save_.

Finally, the e-mail reporting script _send_megatest_email.py_ looks as follows. _mailtostr_ and _maillist_ specify recipients of reports.

Both scripts can be found in the _tests/tools_ directory of Pygr.